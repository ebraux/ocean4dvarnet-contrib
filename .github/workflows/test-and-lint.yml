name: Run Tests & Lint for contrib projects

on:
  push:
    paths:
      - 'contrib/**'   # Ne déclenche l'action que si quelque chose dans `contrib/` change
  pull_request:
    paths:
      - 'contrib/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_dirs: ${{ steps.filter.outputs.dirs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Detect modified contrib projects
        id: filter
        run: |
          echo "dirs=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^contrib/' | cut -d'/' -f2 | sort -u | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_ENV

  test-and-lint:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.changed_dirs != '[]' }}  # N'exécute que si des changements ont été détectés
    strategy:
      matrix:
        contrib_project: ${{ fromJson(needs.detect-changes.outputs.changed_dirs) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install pylint pytest

      - name: Run pylint
        run: |
          pylint contrib/${{ matrix.contrib_project }} --output-format=json > pylint-${{ matrix.contrib_project }}.json || true

      - name: Run pytest
        run: |
          pytest contrib/${{ matrix.contrib_project }}/tests --junitxml=pytest-${{ matrix.contrib_project }}.xml || true

      - name: Upload lint results
        uses: actions/upload-artifact@v3
        with:
          name: pylint-results-${{ matrix.contrib_project }}
          path: pylint-${{ matrix.contrib_project }}.json

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.contrib_project }}
          path: pytest-${{ matrix.contrib_project }}.xml
