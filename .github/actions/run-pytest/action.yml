name: "Run pytest and coverage"
inputs:
  path:
    description: "Test path"
    required: true
  output-dir:
    description: "Directory to store coverage reports"
    required: true

outputs:
  coverage:
    description: "Coverage percentage"
    value: ${{ steps.extract.outputs.coverage }}

runs:
  using: "composite"
  steps:
    - name: Install pytest
      run: pip install pytest pytest-cov
      shell: bash

    - name: Run tests and generate coverage
      run: |
        mkdir -p ${{ inputs.output-dir }}/reports
         
        echo "Running tests for ${{ inputs.path }}"

        # Check if the path is for the scripts directory
        # Run pytest on the root tests folder
        if [[ -d "tests" ]]; then
          echo "Running tests from the root tests folder"
          pytest --cov=${{ inputs.path }} --cov-report=xml:${{ inputs.output-dir }}/reports/coverage_scripts.xml
        else
          echo "No tests directory found in the root directory"
        fi

        # Check if the path is in the code folder
        if [[ -d "${{ inputs.path }}/tests" ]]; then
          # Run pytest on the {name}/tests folder
          echo "Running tests for ${input.path} from its tests folder"
          pytest --cov=${{ inputs.path }} --cov-report=xml:${{ inputs.output-dir }}/reports/coverage_${{ inputs.path }}.xml ${{ inputs.path }}
        else
          echo "No tests directory found for ${{ inputs.path }}"
        fi
      shell: bash

    - name: Extract coverage
      id: extract
      run: |
        RATE=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('${{ inputs.output-dir }}/reports/coverage.xml'); root = tree.getroot(); print(root.attrib['line-rate'])")
        PCT=$(python -c "print(round(float('${RATE}') * 100, 2))")
        echo "coverage=$PCT" >> $GITHUB_OUTPUT
      shell: bash

    - name: Generate Coverage Badge
      run: |
        COVERAGE=${{ steps.extract.outputs.coverage }}
        COLOR="red"
        if (( $(echo "$COVERAGE > 80.0" | bc -l) )); then COLOR="green";
        elif (( $(echo "$COVERAGE > 70.0" | bc -l) )); then COLOR="yellow";
        elif (( $(echo "$COVERAGE > 50.0" | bc -l) )); then COLOR="orange"; fi
        mkdir -p ${{ inputs.output-dir }}/badges
        curl -o ${{ inputs.output-dir }}/badges/coverage.svg \
          "https://img.shields.io/badge/coverage-${COVERAGE}%25-${COLOR}"
      shell: bash
