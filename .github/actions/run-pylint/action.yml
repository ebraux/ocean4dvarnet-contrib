name: "Run Pylint"
description: "Run pylint and generate badge"
inputs:
  path:
    description: "Target directory"
    required: true
  output-dir:
    description: "Where to put reports/badges"
    required: true

outputs:
  score:
    description: "Pylint score"
    value: ${{ steps.get-score.outputs.score }}

runs:
  using: "composite"
  steps:
    - name: Install Pylint
      run: pip install pylint
      shell: bash

#     - name: debug
#       continue-on-error: true
#       run: |
#           sudo apt install -y tree
#           tree ${{ inputs.path }}
#           pylint ${{ inputs.path }} || true
#           pylint ${{ inputs.path }} 
#       shell: bash
# # | grep -oP "(?<=rated at )[0-9.]+(?=/10)"

    - name: Run Pylint
      id: get-score
      run: |
        # 1. Run pylint and capture the output (ignore fatal errors)
        PYLINT_OUTPUT=$(pylint "${{ inputs.path }}" 2>/dev/null || true)
        #   - "|| true": prevents the script from failing if pylint returns
        #                an error code.
        # 2. Extract the score using grep
        SCORE=$(echo "$PYLINT_OUTPUT" | grep -oP '(?<=rated at )[0-9.]+(?=/10)')
        # 3. Provide a default value if the score is empty (e.g., 0)
        SCORE=${SCORE:-0.0}
        # 4. Remove any trailing newlines or carriage returns
        SCORE=$(echo $SCORE | tr -d '\r\n')
        # 5. Set the score as an output variable
        echo "score=$SCORE" >> $GITHUB_OUTPUT
        # 6. Print the score to the console for debugging
        echo "Pylint score for ${{ inputs.path }} : $SCORE"
      shell: bash

    # - name: Run Pylint
    #   id: get-score
    #   run: |
    #     # Run pylint and extract the score
    #     #SCORE=$(pylint ${{ inputs.path }} 2>/dev/null | grep -oP "(?<=rated at )[0-9.]+(?=/10)" || echo "0.0")
    #     SCORE=$(pylint ${{ inputs.path }} 2>/dev/null | grep -oP "(?<=rated at )[0-9.]+(?=/10)")
    #     SCORE=$(echo $SCORE | tr -d '\r\n')
    #     # if ! [[ "$SCORE" =~ ^[0-9]+(\.[0-9]+)?$ ]]; then
    #     #   SCORE="0.0"
    #     # fi
    #     echo "score=$SCORE" >> $GITHUB_OUTPUT
    #     echo "Pylint score for ${{ inputs.path }} : $SCORE"
    #   shell: bash


    - name: Generate Pylint Badge
      run: |
        SCORE=${{ steps.get-score.outputs.score }}
        COLOR="red"
        if (( $(echo "$SCORE > 7.0" | bc -l) )); then COLOR="green";
        elif (( $(echo "$SCORE > 5.0" | bc -l) )); then COLOR="yellow";
        elif (( $(echo "$SCORE > 3.0" | bc -l) )); then COLOR="orange"; fi
        mkdir -p ${{ inputs.output-dir }}/badges
        curl -o ${{ inputs.output-dir }}/badges/pylint.svg \
          "https://img.shields.io/badge/pylint-${SCORE}-${COLOR}"
      shell: bash
